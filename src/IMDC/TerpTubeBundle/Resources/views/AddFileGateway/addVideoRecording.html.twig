{% extends "IMDCTerpTubeBundle:MyFilesGateway:previewMotionMedia.html.twig" %}
{% trans_default_domain 'IMDCTerpTubeBundle' %}

{% block motionMedia %}
<video	class="preview"  id="record" preload="auto" autoplay muted>
</video>
<script type='text/javascript'>
 $(document).ready(function() {
	 var videoElement = $("#record");
	 var player = new Player(videoElement);
	 
	 player.options.areaSelectionEnabled = false;
	 player.options.updateTimeType = Player.DENSITY_BAR_UPDATE_TYPE_ABSOLUTE;
	 player.options.type = Player.DENSITY_BAR_TYPE_RECORDER;
	 player.options.backButtons = false;
	 //player.options.forwardButton = false;
	 player.options.audioBar = false;
	 player.options.volumeControl = false;
	 player.options.recordingErrorFunction = function(e)
	 {
		 console.log('Reeeejected!', e);
	 }
	 player.options.recordingSuccessFunction = function(data)
	 {
		 console.log(recorderConfiguration);
		 var fn = window[recorderConfiguration.recordingSuccessFunction];
		 fn(data);
		 console.log('Success!', data);
	 }
	 player.options.forwardButtons.push('<button class="forwardButton"></button>');
	 player.options.forwardFunctions.push(function(data)
	 {
		 player.destroyRecorder();
		 console.log(recorderConfiguration);
		 var fn = window[recorderConfiguration.forwardFunction]||null;
		 fn(data);
		 console.log('Success!', data);
	 });
	 player.options.recordingPostURL = "{{ path('imdc_files_gateway_record') }}";

	 player.createControls();
	 videoElement.parents(".ui-dialog").on("dialogbeforeclose", function(event, ui) 
		 {
		 if (player !=null)
		 	player.destroyRecorder();
		 });
 });

  </script>

{% endblock motionMedia %}

 