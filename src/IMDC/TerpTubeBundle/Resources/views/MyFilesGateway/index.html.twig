{% extends "IMDCTerpTubeBundle:Default:index.html.twig" %} {%
trans_default_domain 'IMDCTerpTubeBundle' %} {% block title %}My Files{%
endblock title %} {% block nav_ul_authenticated_my_files %}
<li class="active">{% endblock %} {% block herounit %}
	<h1>{{ 'filesGateway.title'|trans }}</h1> {% endblock herounit %} {%
	block underherounitrow1 %}
	<p>
	
	<div class="row-fluid">
		<a id="record-link" class="btn btn-primary"
			href="{{ path('imdc_files_gateway_record_media') }}"><i
			class="fa fa-video-camera"></i> {{
			'filesGateway.buttons.record'|trans }}</a> <a class="btn btn-primary"
			href="{{ path('imdc_files_gateway_audio') }}"><i class="fa fa-music"></i>
			{{ 'filesGateway.buttons.audio'|trans }}</a> <a
			class="btn btn-primary" href="{{ path('imdc_files_gateway_video') }}"><i
			class="fa fa-film"></i> {{ 'filesGateway.buttons.video'|trans }}</a>
		<a class="btn btn-primary"
			href="{{ path('imdc_files_gateway_image') }}"><i
			class=" fa fa-picture-o"></i> {{ 'filesGateway.buttons.image'|trans
			}}</a> <a class="btn btn-primary"
			href="{{ path('imdc_files_gateway_other') }}"><i
			class="fa fa-file-text"></i> {{ 'filesGateway.buttons.other'|trans }}</a>
	</div>
	</p> {% endblock underherounitrow1 %} {% block underherounitrow2 %}
	<div class="row-fluid">
		<div class="span-9">
			<table id="files-table"
				class="table table-condensed table-hover table-striped pmtable">
				<tr>
					<th><i class="fa fa-wrench"></i> Tools</th>
					<th>Name</th>
					<th>Type</th>
					<th>Created</th>
					<th>Size</th>
				</tr>
				{% if resourceFiles and resourceFiles|length >0 %} {% for
				resourceFile in resourceFiles %}
				<tr>
					<td><a class="btn btn-small delete-button" href='#'
						data-url="{{ path('imdc_files_gateway_remove', {'mediaId': resourceFile.id}) }}"
						data-val="{{ resourceFile.id }}"><i class="fa fa-minus-circle"></i>
							{{ 'filesGateway.deleteLink'|trans }}</a> {% if
						resourceFile.getIsReady ==
						constant('IMDC\\TerpTubeBundle\\Entity\\Media::READY_NO') %} <a
						class="btn btn-small preview-button disabled" href='#'
						data-type="{{ resourceFile.type }}"
						data-url="{{ path('imdc_files_gateway_preview', {'mediaId': resourceFile.id}) }}"
						data-val="{{ resourceFile.id }}"><i class="fa fa-play-circle"></i>
							{{ 'filesGateway.previewLink'|trans }}</a> {% else %} <a
						class="btn btn-small preview-button" href='#'
						data-type="{{ resourceFile.type }}"
						data-url="{{ path('imdc_files_gateway_preview', {'mediaId': resourceFile.id}) }}"
						data-val="{{ resourceFile.id }}"><i class="fa fa-play-circle"></i>
							{{ 'filesGateway.previewLink'|trans }}</a> {% endif %} <a
						class="btn btn-small share-button"
						href="{{ path('imdc_thread_create_new_from_media', {'resourceid': resourceFile.id} ) }}"
						data-type-"{{ resourceFile.type }}" data-val="{{ resourceFile.id }}"><i
							class="fa fa-share-square-o"></i> {{
							'filesGateway.shareLink'|trans }}</a> {% if resourceFile.type ==
						1 or resourceFile.type == 2 %} <a
						class="btn btn-small interpret-button"
						href="{{ path('imdc_media_simultaneous_record', {'mediaID': resourceFile.id} ) }}"><i
							class="fa fa-film"></i> Create Interpretation</a> {% endif %}</td>
					<td>{{ resourceFile.title }}</td>
					<td>{% if resourceFile.type == 0 %} <i class="fa fa-picture-o"></i>
						{% elseif resourceFile.type == 1 %} <i class="fa fa-film"></i> {%
						elseif resourceFile.type == 2 %} <i class="fa fa-headphones"></i>
						{% endif %} {{ ('filesGateway.type.'~resourceFile.type)|trans }}
					</td>
					<td>{{ resourceFile.getMetaData.getTimeUploaded|date('g:ia M j') }}</td>
					{% if resourceFile.getMetaData.getSize == -1 %}
					<td><i class="fa fa-spinner fa-spin fa-large"></i></td> {% else %}
					<td>{{ '%.2f' |format(resourceFile.getMetaData.getSize / 1024
						/1024) }}MB</td> {% endif %}
				</tr>
				{% endfor %} {% else %}
				<tr>{{ 'filesGateway.noFiles'|trans }}
				</tr>
				{% endif %}
			</table>

		</div>
		<div id="preview"></div>
		{% endblock underherounitrow2 %} {% block javascripts %} {{ parent()
		}}
		<script src="{{ asset('bundles/imdcterptube/js/myFiles.js') }}"></script>
		<script type='text/javascript'>

	var recordedMedia;
 	function callBack(data)
	 {
		 	var media = data['media'];
		 	recordedMedia=media; 
		 	addMediaRow(recordedMedia);
			console.log("Great success!!! Media id is: " +media['id']);
	 }

	 function forwardFunction()
	 {
			var mediaId = recordedMedia['id'];
			console.log(mediaId);
			var mediaURL = "{{ path('imdc_files_gateway_preview', {'mediaId': '-1'}) }}";
			mediaURL = mediaURL.replace('-1',mediaId);
			window["mediaChooser"].loadMediaPage(mediaId, mediaURL);
	 }
	 

	 function addMediaRow(media)
	 {
		 //FIXME should add a prototype row and then move this function to the js file.
		 var mediaTypes ={ 0 : "{{ 'filesGateway.type.0'|trans }}",
		 1: "{{ 'filesGateway.type.1'|trans }}",
		 2: "{{ 'filesGateway.type.2'|trans }}",
		 9: "{{ 'filesGateway.type.9'|trans }}"};
		 var mediaType = mediaTypes[media.type];
		 var row = $(document.createElement('tr'));
		 row.append($(document.createElement('td'))
				 .append($(document.createElement('a'))
						 .addClass("delete-button")
						 .attr('href',"#")
						 .attr('data-url', "{{ path('imdc_files_gateway_remove', {'mediaId': 0}) }}".replace('0',media.id))
						 .attr('data-val',media.id)
						 .html('<i class="fa fa-minus-circle"></i>{{ "filesGateway.deleteLink"|trans }} '))
				 .append($(document.createElement('a'))
						 .addClass("preview-button")
						 .addClass("disabled")
						 .attr('href',"#")
						 .attr('data-type', media.type)
						 .attr('data-url', "{{ path('imdc_files_gateway_preview', {'mediaId': 0}) }}".replace('0',media.id))
						 .attr('data-val',media.id)
						 .html('<i class="fa fa-play-circle"></i>{{ "filesGateway.previewLink"|trans }}')));
		 row.append($(document.createElement('td'))
				 .html(media.title));
		 row.append($(document.createElement('td'))
				 .html(mediaType));

		 var timeUploaded = new Date(media.metaData.timeUploaded.date);
		 var ampm = timeUploaded.getHours()>=12?"pm":"am";
		 var hours = (timeUploaded.getHours()>12?timeUploaded.getHours()-12:timeUploaded.getHours());
		 hours = hours<10?"0"+hours:hours;
		 var time = hours+":"+(timeUploaded.getMinutes()<10?"0"+timeUploaded.getMinutes():timeUploaded.getMinutes())+ampm ;
		 var timeDateString = time+" "+$.datepicker.formatDate('M d', timeUploaded);
		 
		 row.append($(document.createElement('td'))
				 .html(timeDateString));
		 row.append($(document.createElement('td'))
				 .html('<i class="fa fa-spinner fa-spin fa-large"></i>'));
		 $("#files-table").append(row);
		 $('.preview-button').click(function(e) {
	            if ($(this).hasClass('disabled'))
	                return false;
	            $('#preview').html('');
	        	previewFileLink($(this), $('#preview'), true);
	        	return false;
		 });
         $('.delete-button').click(function(e) {
	            	deleteFile($(this), "{{ 'filesGateway.deleteConfirmMessage'|trans }}");
	            	return false;
         });
	 }
	 
  $(document).ready(function() {
	  	window["mediaChooser"] = new MediaChooser($("#preview"), function(mediaID)
			 	{
		            console.log("Successfully finished creating media! with mediaID: " + mediaID);
		 		}, true);
        $('.preview-button').click(function(e) {
            if ($(this).hasClass('disabled'))
                return false;
            $('#preview').html('');
            var button = this;
//         	previewFileLink($(currentElement).attr('data-val'), $(currentElement).attr('data-url'), true);
        	window["mediaChooser"].previewMediaFile($(button).attr('data-val'), $(button).attr('data-url'), true);
        	return false;
        });
        $('.delete-button').click(function(e) {
        	deleteFile($(this), "{{ 'filesGateway.deleteConfirmMessage'|trans }}");
        	return false;
        });
        $('#record-link').click(function(e) {
        	
            var recorderConfiguration = {forwardButtons: ["<button class='forwardButton'></button>"], forwardFunctions: ["forwardFunction"], recordingSuccessFunction: "callBack"};
            window["mediaChooser"].chooseMedia(MediaChooser.TYPE_RECORD_VIDEO, {recorderConfiguration: recorderConfiguration});
//         	popUp($('#preview'), recordVideo($('#preview'), $(this).attr('href'), recorderConfiguration), "Record");
        	return false;
        });
    });

  </script>


		{% endblock javascripts %}