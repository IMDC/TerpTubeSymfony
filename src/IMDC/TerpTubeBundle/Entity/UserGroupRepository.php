<?php

namespace IMDC\TerpTubeBundle\Entity;

use Doctrine\ORM\EntityRepository;
use IMDC\TerpTubeBundle\Utils\Utils;
use Symfony\Component\Security\Core\SecurityContext;

/**
 * UserGroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserGroupRepository extends EntityRepository
{
    /**
     * @param $user
     * @param array $sortParams
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getViewableToUserQB($user, $sortParams = array())
    {
        $qb = $this->createQueryBuilder('g')
            ->leftJoin('g.members', 'm');

        //FIXME: treat 'visibleToPublic' as 'isPrivate'
        $qb->where($qb->expr()->eq('g.visibleToPublic', ':visibleToPublic'))
            //FIXME: contradicts 'isPrivate'. needed? only registered members will get here anyway
            //->orWhere($qb->expr()->eq('g.visibleToRegisteredUsers', ':visibleToRegisteredUsers'))
            ->orWhere($qb->expr()->in('m.id', array(
                $user->getId()
            )))
            ->setParameters(array(
                'visibleToPublic' => true,
                //'visibleToRegisteredUsers' => true
            ));

        return Utils::applySortParams($qb, $sortParams);
    }

    public function getViewableToUser($user, SecurityContext $securityContext, $sortParams = array())
    {
        $groups = $this->getViewableToUserQB($user, $sortParams)->getQuery()->getResult();

        //FIXME: groups don't use AccessType restrictions
        //return Utils::filterViewableToUser($securityContext, $groups);
        return $groups;
    }
}
