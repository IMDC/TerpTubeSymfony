<?php

namespace IMDC\TerpTubeBundle\Entity;

use Doctrine\ORM\EntityRepository;
use IMDC\TerpTubeBundle\Utils\Utils;
use Symfony\Component\Security\Core\SecurityContext;

/**
 * ForumRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ForumRepository extends EntityRepository
{
    /**
     * @param $user
     * @param array $sortParams
     * @param bool $excludeGroupForums
     * @param bool $groupForumsOnly
     * @param $groupId
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getViewableToUserQB($user, $sortParams = array(), $excludeGroupForums = false, $groupForumsOnly = false, $groupId = -1)
    {
        $qb = $this->createQueryBuilder('f');

        if ($excludeGroupForums) {
            $qb->where($qb->expr()->isNull('f.group'));
        } else {
            $qb->leftJoin('f.group', 'g')
                ->leftJoin('g.members', 'm')
                ->where($qb->expr()->isNotNull('f.group'))
                ->andWhere($qb->expr()->in('m.id', array(
                    $user->getId()
                )));

            if ($groupId > 0) {
                $qb->andWhere($qb->expr()->eq('g.id', ':groupId'))
                    ->setParameter('groupId', $groupId);
            }

            if (!$groupForumsOnly)
                $qb->orWhere($qb->expr()->isNull('f.group'));
        }

        return Utils::applySortParams($qb, $sortParams);
    }

    public function getViewableToUser($user, SecurityContext $securityContext, $sortParams = array(), $excludeGroupForums = false, $groupForumsOnly = false, $groupId = -1)
    {
        $forums = $this->getViewableToUserQB($user, $sortParams, $excludeGroupForums, $groupForumsOnly, $groupId)->getQuery()->getResult();

        return Utils::filterViewableToUser($securityContext, $forums);
    }

    /**
     * Used to get all the forums that use the media as a title
     * @param Media $media
     */
    public function getForumsForMedia(Media $media)
    {
        $dql = "SELECT f
	            FROM IMDCTerpTubeBundle:Forum f
	            JOIN f.titleMedia m
    			WHERE :mid = m.id";
        $query = $this->getEntityManager()->createQuery($dql)->setParameter('mid', $media->getId());
        return $query->getResult();
    }
}
